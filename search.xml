<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>WSL2或linux中设置脚本以便捷开启命令行代理</title>
    <url>/2025/02/21/WSL2_proxy/</url>
    <content><![CDATA[<h1 id="WSL2或linux中设置脚本以便捷开启命令行代理"><a href="#WSL2或linux中设置脚本以便捷开启命令行代理" class="headerlink" title="WSL2或linux中设置脚本以便捷开启命令行代理"></a>WSL2或linux中设置脚本以便捷开启命令行代理</h1><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>支持本地网络共享的代理服务器</p>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>wsl2的命令行无法直接使用系统代理，或者在一些linux服务器中，我们希望能在当前shell使用代理，这时候可以通过命令来实现代理：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">&quot;<span class="variable">$&#123;地址&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> HTTP_PROXY=<span class="string">&quot;<span class="variable">$&#123;地址&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="string">&quot;<span class="variable">$&#123;地址&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> HTTPS_proxy=<span class="string">&quot;<span class="variable">$&#123;地址&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">export</span> ALL_PROXY=<span class="string">&quot;<span class="variable">$&#123;地址&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> all_proxy=<span class="string">&quot;<span class="variable">$&#123;地址&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>同时，git也可以设置代理地址</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global http.https://github.com.proxy <span class="variable">$&#123;地址&#125;</span></span><br><span class="line">git config --global https.https://github.com.proxy <span class="variable">$&#123;地址&#125;</span></span><br></pre></td></tr></table></figure>

<p>手动设置比较麻烦，这里集成到脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 新建文件</span></span><br><span class="line">vim yourPath/proxy.sh</span><br></pre></td></tr></table></figure>

<h2 id="针对wsl2版本2-0以前"><a href="#针对wsl2版本2-0以前" class="headerlink" title="针对wsl2版本2.0以前"></a>针对wsl2版本2.0以前</h2><p>写入如下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">hostip=$(<span class="built_in">cat</span> /etc/resolv.conf | grep nameserver | awk <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span>)</span><br><span class="line">wslip=$(hostname -I | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">port=yourPort</span><br><span class="line">testurl=yourUrl</span><br><span class="line"> </span><br><span class="line">PROXY_HTTP=<span class="string">&quot;http://<span class="variable">$&#123;hostip&#125;</span>:<span class="variable">$&#123;port&#125;</span>&quot;</span></span><br><span class="line"><span class="comment">#PROXY_SOCKS5=&quot;socks5://$&#123;hostip&#125;:$&#123;port&#125;&quot;</span></span><br><span class="line"><span class="comment">#PROXY_SOCKS5=&quot;socks5h://$&#123;hostip&#125;:$&#123;port&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">set_proxy</span></span>()&#123;</span><br><span class="line">  <span class="built_in">export</span> http_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line">  <span class="built_in">export</span> HTTP_PROXY=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">  <span class="built_in">export</span> https_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line">  <span class="built_in">export</span> HTTPS_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">  <span class="built_in">export</span> ALL_PROXY=<span class="string">&quot;<span class="variable">$&#123;PROXY_SOCKS5&#125;</span>&quot;</span></span><br><span class="line">  <span class="built_in">export</span> all_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_SOCKS5&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">  git config --global http.https://github.com.proxy <span class="variable">$&#123;PROXY_HTTP&#125;</span></span><br><span class="line">  git config --global https.https://github.com.proxy <span class="variable">$&#123;PROXY_HTTP&#125;</span></span><br><span class="line"> </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Proxy has been opened.&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">unset_proxy</span></span>()&#123;</span><br><span class="line">  <span class="built_in">unset</span> http_proxy</span><br><span class="line">  <span class="built_in">unset</span> HTTP_PROXY</span><br><span class="line">  <span class="built_in">unset</span> https_proxy</span><br><span class="line">  <span class="built_in">unset</span> HTTPS_PROXY</span><br><span class="line">  <span class="built_in">unset</span> ALL_PROXY</span><br><span class="line">  <span class="built_in">unset</span> all_proxy</span><br><span class="line">  git config --global --<span class="built_in">unset</span> http.https://github.com.proxy</span><br><span class="line">  git config --global --<span class="built_in">unset</span> https.https://github.com.proxy</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Proxy has been closed.&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">test_setting</span></span>()&#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Host IP:&quot;</span> <span class="variable">$&#123;hostip&#125;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;WSL IP:&quot;</span> <span class="variable">$&#123;wslip&#125;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Try to connect to testUrl...&quot;</span></span><br><span class="line">  resp=$(curl -I -s --connect-timeout 5 -m 5 -w <span class="string">&quot;%&#123;http_code&#125;&quot;</span> -o /dev/null <span class="variable">$&#123;testurl&#125;</span>)</span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$&#123;resp&#125;</span> = 200 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Proxy setup succeeded!&quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Proxy setup failed!&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;set&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  set_proxy</span><br><span class="line"> </span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;unset&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  unset_proxy</span><br><span class="line"> </span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;test&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  test_setting</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Unsupported arguments.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>解释一下，前面第一句主要是获取主机ip，因为某种原因，wsl每次启动时，主机的wlan共享代理ip总会变，所以通过该命令获取。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostip=$(<span class="built_in">cat</span> /etc/resolv.conf | grep nameserver | awk <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>注意！！！这里需要设置代理共享的端口号，即脚本中的port变量，以及设置测试连接是否成功的网站，即脚本中的testurl变量。</p>
<h3 id="关于socks注释"><a href="#关于socks注释" class="headerlink" title="关于socks注释"></a>关于socks注释</h3><p>这里解释下注释的socks5代理，对于socks代理需要了解你的代理服务器所支持的socks版本，是socks5还是socks4还是socks5h，有以下对应关系：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># socks4</span></span><br><span class="line">socks://&#123;ip&#125;:&#123;port&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># socks5</span></span><br><span class="line">socks5://&#123;ip&#125;:&#123;port&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># socks5h</span></span><br><span class="line">socks5h://&#123;ip&#125;:&#123;port&#125;</span><br></pre></td></tr></table></figure>

<p>在bash中，如果注释，则意味着未设置socks代理变量，不必专门注释后面的all_proxy，会设为空字符串。这里默认注释，因为大部分情况下http代理已经够用，如果需要socks代理，请了解socks版本后，解除对应socks版本的注释即可。</p>
<h2 id="针对wsl2版本2-0以后以及一般linux"><a href="#针对wsl2版本2-0以后以及一般linux" class="headerlink" title="针对wsl2版本2.0以后以及一般linux"></a>针对wsl2版本2.0以后以及一般linux</h2><h3 id="对于wsl"><a href="#对于wsl" class="headerlink" title="对于wsl"></a>对于wsl</h3><p>微软更新了wsl，可以直接方便的共享系统网络了。</p>
<p>这时如果直接打开wsl，在未配置的情况下，应该会显示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wsl: 检测到 localhost 代理配置，但未镜像到 WSL。NAT 模式下的 WSL 不支持 localhost 代理。</span><br></pre></td></tr></table></figure>

<p>打开或创建wsl配置文件(位于C:&#x2F;User&#x2F;%你的用户名&#x2F;.wslconfig),并添加以下内容:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[experimental]</span><br><span class="line">autoMemoryReclaim=gradual  </span><br><span class="line">networkingMode=mirrored</span><br><span class="line">dnsTunneling=<span class="literal">true</span></span><br><span class="line">firewall=<span class="literal">true</span></span><br><span class="line">autoProxy=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>这样就解决了这个问题，同时因为镜像到wsl，主机的ip将会默认为127.0.0.1</p>
<p>所以前面脚本里的第一句可以更改为：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostip=$(<span class="built_in">cat</span> /etc/resolv.conf | grep nameserver | awk <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span>)</span><br><span class="line">更改为</span><br><span class="line">hostip=127.0.0.1</span><br></pre></td></tr></table></figure>

<h3 id="对于一般linux"><a href="#对于一般linux" class="headerlink" title="对于一般linux"></a>对于一般linux</h3><p>对于linux就更简单了，hostip设置为代理服务器地址即可。</p>
<h2 id="添加到bash或zsh"><a href="#添加到bash或zsh" class="headerlink" title="添加到bash或zsh"></a>添加到bash或zsh</h2><p>在bash中添加命令即可：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line"><span class="comment"># 添加命令</span></span><br><span class="line"><span class="built_in">alias</span> proxy=<span class="string">&quot;source yourPath/proxy.sh&quot;</span></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>便可以通过命令开启代理</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">proxy <span class="built_in">set</span> 开启</span><br><span class="line">proxy <span class="built_in">unset</span> 关闭</span><br><span class="line">proxy <span class="built_in">test</span> 测试</span><br></pre></td></tr></table></figure>

<h2 id="添加认证信息"><a href="#添加认证信息" class="headerlink" title="添加认证信息"></a>添加认证信息</h2><p>有时候需要有username和password的认证信息，可以如下更改PROXY变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">username=yourUsername</span><br><span class="line">password=yourPassword</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">PROXY_HTTP=<span class="string">&quot;http://<span class="variable">$&#123;username&#125;</span>:<span class="variable">$&#123;password&#125;</span>@<span class="variable">$&#123;hostip&#125;</span>:<span class="variable">$&#123;port&#125;</span>&quot;</span></span><br><span class="line"><span class="comment">#PROXY_SOCKS5=&quot;socks5://$&#123;username&#125;:$&#123;password&#125;@$&#123;hostip&#125;:$&#123;port&#125;&quot;</span></span><br><span class="line"><span class="comment">#PROXY_SOCKS5=&quot;socks5h://$&#123;username&#125;:$&#123;password&#125;@$&#123;hostip&#125;:$&#123;port&#125;&quot;</span></span><br></pre></td></tr></table></figure>

<p>完整版本如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">hostip=$(<span class="built_in">cat</span> /etc/resolv.conf | grep nameserver | awk <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span>)</span><br><span class="line">wslip=$(hostname -I | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">port=yourPort</span><br><span class="line">testurl=yourUrl</span><br><span class="line"> </span><br><span class="line">username=yourUsername</span><br><span class="line">password=yourPassword</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">PROXY_HTTP=<span class="string">&quot;http://<span class="variable">$&#123;username&#125;</span>:<span class="variable">$&#123;password&#125;</span>@<span class="variable">$&#123;hostip&#125;</span>:<span class="variable">$&#123;port&#125;</span>&quot;</span></span><br><span class="line"><span class="comment">#PROXY_SOCKS5=&quot;socks5://$&#123;username&#125;:$&#123;password&#125;@$&#123;hostip&#125;:$&#123;port&#125;&quot;</span></span><br><span class="line"><span class="comment">#PROXY_SOCKS5=&quot;socks5h://$&#123;username&#125;:$&#123;password&#125;@$&#123;hostip&#125;:$&#123;port&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">set_proxy</span></span>()&#123;</span><br><span class="line">  <span class="built_in">export</span> http_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line">  <span class="built_in">export</span> HTTP_PROXY=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">  <span class="built_in">export</span> https_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line">  <span class="built_in">export</span> HTTPS_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">  <span class="built_in">export</span> ALL_PROXY=<span class="string">&quot;<span class="variable">$&#123;PROXY_SOCKS5&#125;</span>&quot;</span></span><br><span class="line">  <span class="built_in">export</span> all_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_SOCKS5&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">  git config --global http.https://github.com.proxy <span class="variable">$&#123;PROXY_HTTP&#125;</span></span><br><span class="line">  git config --global https.https://github.com.proxy <span class="variable">$&#123;PROXY_HTTP&#125;</span></span><br><span class="line"> </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Proxy has been opened.&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">unset_proxy</span></span>()&#123;</span><br><span class="line">  <span class="built_in">unset</span> http_proxy</span><br><span class="line">  <span class="built_in">unset</span> HTTP_PROXY</span><br><span class="line">  <span class="built_in">unset</span> https_proxy</span><br><span class="line">  <span class="built_in">unset</span> HTTPS_PROXY</span><br><span class="line">  <span class="built_in">unset</span> ALL_PROXY</span><br><span class="line">  <span class="built_in">unset</span> all_proxy</span><br><span class="line">  git config --global --<span class="built_in">unset</span> http.https://github.com.proxy</span><br><span class="line">  git config --global --<span class="built_in">unset</span> https.https://github.com.proxy</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Proxy has been closed.&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">test_setting</span></span>()&#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Host IP:&quot;</span> <span class="variable">$&#123;hostip&#125;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;WSL IP:&quot;</span> <span class="variable">$&#123;wslip&#125;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Try to connect to testUrl...&quot;</span></span><br><span class="line">  resp=$(curl -I -s --connect-timeout 5 -m 5 -w <span class="string">&quot;%&#123;http_code&#125;&quot;</span> -o /dev/null <span class="variable">$&#123;testurl&#125;</span>)</span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$&#123;resp&#125;</span> = 200 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Proxy setup succeeded!&quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Proxy setup failed!&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;set&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  set_proxy</span><br><span class="line"> </span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;unset&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  unset_proxy</span><br><span class="line"> </span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;test&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  test_setting</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Unsupported arguments.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h2 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h2><p><a href="https://blog.csdn.net/weixin_62355896/article/details/134458330">使用WSL2时控制台输出“wsl: 检测到 localhost 代理配置，但未镜像到 WSL。NAT 模式下的 WSL 不支持 localhost 代理-CSDN博客</a></p>
<p><a href="https://www.cnblogs.com/tuilk/p/16287472.html">wsl2配置代理 - 博客园 (cnblogs.com)</a></p>
]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>WSL</tag>
        <tag>linux</tag>
        <tag>代理</tag>
      </tags>
  </entry>
  <entry>
    <title>cpp_for_vscode</title>
    <url>/2025/02/22/cpp-for-vscode/</url>
    <content><![CDATA[<p><img src="/2025/02/22/cpp-for-vscode/112.jpg" alt="image-20250222123043564"></p>
<p>参考<a href="https://blog.csdn.net/Leilani_K/article/details/135952242">【小白向】MAC端VSCode C++环境配置（超干货、超详细）_mac运行cpp环境配置-CSDN博客</a></p>
<p>launch.json</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        </span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C/C++: clang++ 生成和调试活动文件&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppdbg&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;/target/$&#123;fileBasenameNoExtension&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stopAtEntry&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;fileDirname&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;environment&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="comment">// &quot;internalConsoleOptions&quot;: &quot;openOnSessionStart&quot;,</span></span><br><span class="line">            <span class="attr">&quot;externalConsole&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;MIMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lldb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>tasks.json</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/clang++&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-fcolor-diagnostics&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-fansi-escape-codes&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-std=c++17&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-g&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;fileDirname&#125;/*.cpp&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-o&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;workspaceFolder&#125;/target/$&#123;fileBasenameNoExtension&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;fileDirname&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$gcc&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;调试器生成的任务。&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;presentation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;echo&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;reveal&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;focus&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;panel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;new&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;showReuseMessage&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;clear&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;run&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clear &amp;&amp; $&#123;workspaceFolder&#125;/target/hello &amp;&amp; echo&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;presentation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;echo&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;reveal&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;focus&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;panel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shared&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;showReuseMessage&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;clear&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build and run&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dependsOn&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;run&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dependsOrder&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sequence&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppbuild&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C/C++: g++ 生成活动文件&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/g++&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-fdiagnostics-color=always&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-g&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;file&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-o&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;fileDirname&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$gcc&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;调试器生成的任务。&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppbuild&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C/C++: clang++ 生成活动文件&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/clang++&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-fcolor-diagnostics&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-fansi-escape-codes&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-g&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;file&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-o&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;fileDirname&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$gcc&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;调试器生成的任务。&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>c_cpp_properties.json</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Mac&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;includePath&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$&#123;workspaceFolder&#125;/**&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;defines&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;macFrameworkPath&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cStandard&quot;</span><span class="punctuation">:</span> <span class="string">&quot;c17&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cppStandard&quot;</span><span class="punctuation">:</span> <span class="string">&quot;c++17&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;intelliSenseMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;macos-clang-arm64&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;compilerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/clang++&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>cpp</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>MAC上基于QT6配置安卓开发环境</title>
    <url>/2025/03/08/qt-for-android-with-mac/</url>
    <content><![CDATA[<h1 id="MAC上基于QT6配置安卓开发环境"><a href="#MAC上基于QT6配置安卓开发环境" class="headerlink" title="MAC上基于QT6配置安卓开发环境"></a>MAC上基于QT6配置安卓开发环境</h1><h2 id="配置Android环境"><a href="#配置Android环境" class="headerlink" title="配置Android环境"></a>配置Android环境</h2><p>也可以通过<code>Android Studio</code>来配置。好处是可以用<code>GUI</code>，但是占用空间大。</p>
<h3 id="配置jdk"><a href="#配置jdk" class="headerlink" title="配置jdk"></a>配置jdk</h3><p>这里用<code>brew</code>直接下载</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install openjdk@17</span><br></pre></td></tr></table></figure>

<p>注意对于 <code>Apple Silicon</code>，<code>brew</code>下载后jdk默认路径是</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/homebrew/opt/openjdk@17</span><br></pre></td></tr></table></figure>

<p>后面会用到这个路径，至于设置环境变量，将以下配置到<code>bashrc</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=<span class="string">&quot;/opt/homebrew/opt/openjdk@17&quot;</span>  <span class="comment"># 对于 Apple Silicon</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>



<h3 id="通过creator配置Android环境"><a href="#通过creator配置Android环境" class="headerlink" title="通过creator配置Android环境"></a>通过creator配置Android环境</h3><p>在网络条件允许的情况下，可以通过<code>creator</code>全自动完成安装。</p>
<p>进入<code>creator</code>中的设备-Android。</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308162742407.png" alt="image-20250308162742407"></p>
<p>在<code>creator</code>中设置<code>jdk</code>位置，将路劲设置为之前<code>brew</code>安装的<code>jdk</code>路径，然后点击下面的设置<code>sdk</code>。<code>creator</code>会检测并开始自动补全缺失的软件包。</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308163059027.png" alt="image-20250308163059027"></p>
<img src="image-20250308163105265.png" alt="image-20250308163105265" style="zoom: 50%;" />

<p>按照引导进行即可。</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308163107924.png" alt="image-20250308163107924"></p>
<p>设置后即为</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308164215256.png" alt="image-20250308164215256"></p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308164218601.png" alt="image-20250308164218601"></p>
<p>这里需要注意<code>jdk</code>版本与<code>cmdline tool</code>的对应。<code>creator</code>实际上是通过<code>cmdline tool</code>来控制安卓<code>sdk</code>的，但是<code>cmdline tool</code>高度依赖于<code>jdk</code>版本，如果你版本不正确，将可能会出现<a href="https://blog.csdn.net/yy_xzz/article/details/132135255">这类问题</a>。</p>
<p>在这里<code>creator</code>也顺带将<code>Openssl</code>配置完成了<img src="/2025/03/08/qt-for-android-with-mac/image-20250308164446236.png" alt="image-20250308164446236"></p>
<h3 id="采用sdkmanager命令行工具手动配置"><a href="#采用sdkmanager命令行工具手动配置" class="headerlink" title="采用sdkmanager命令行工具手动配置"></a>采用sdkmanager命令行工具手动配置</h3><p>如果<code>creator</code>安装出错，也可以通过手动安装的方式完成安装。这里仅仅做个引路，官方写的已经很好了。访问<a href="https://developer.android.google.cn/studio?hl=zh-cn">Android官方</a>，这里仅下载命令行工具包</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308111930417.png" alt="image-20250308111930417"></p>
<p>配置命令行工具的详细操作参见<a href="https://developer.android.google.cn/tools/sdkmanager?hl=zh-cn">sdkmanager  | Android Studio  | Android Developers</a></p>
<p>主要步骤如下：</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308112107209.png" alt="image-20250308112107209"></p>
<p>我这里设置的路径为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/Users/wadaxiyang/Library/Android/sdk</span><br></pre></td></tr></table></figure>

<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308160544242.png" alt="image-20250308160544242"></p>
<p>通过类似命令就可以下载对应的<code>platform-tools</code>等等，实际上和<code>creator</code>做的一样。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./sdkmanager <span class="string">&quot;platform-tools&quot;</span> <span class="string">&quot;platforms;android-33&quot;</span> --proxy_host=127.0.0.1 --proxy_port=9908 --proxy=http</span><br></pre></td></tr></table></figure>



<h2 id="配置Android虚拟机"><a href="#配置Android虚拟机" class="headerlink" title="配置Android虚拟机"></a>配置Android虚拟机</h2><p>实际上<code>creator</code>也能够直接配置<code>Android</code>虚拟机，进入</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308165921399.png" alt="image-20250308165921399"></p>
<p>安装镜像</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308170250522.png" alt="image-20250308170250522"></p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308165646023.png" alt="image-20250308165646023"></p>
<img src="image-20250308165704104.png" alt="image-20250308165704104" style="zoom:50%;" />

<p>选择</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308174812747.png" alt="image-20250308174812747"></p>
<p>启动<code>AVD</code>即可</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308174940137.png" alt="image-20250308174940137"></p>
<h2 id="部署到AVD"><a href="#部署到AVD" class="headerlink" title="部署到AVD"></a>部署到AVD</h2><p><code>QT for Android</code>的安装过程省略。可以参考<a href="https://blog.csdn.net/curtis0730/article/details/132517462">macOS 安装最新 qt6_qt6 for mac-CSDN博客</a>，写的很好。</p>
<p>使用官方示例进行检验</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308195316944.png" alt="image-20250308195316944"></p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308195423549.png" alt="image-20250308195423549"></p>
<p>设置模拟器，注意这里要先启动AVD。</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308195951047.png" alt="image-20250308195951047"></p>
<p>运行结果</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308200038597.png" alt="image-20250308200038597"></p>
<h2 id="部署到真机"><a href="#部署到真机" class="headerlink" title="部署到真机"></a>部署到真机</h2><p>通过<code>USB</code>真机调试与<code>AVD</code>大同小异，这里主要指一下为<code>apk</code>添加签名，以直接安装。</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308201727722.png" alt="image-20250308201727722"></p>
<p>按提示，创建并选择即可。</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308201912872.png" alt="image-20250308201912872"></p>
<p>之后<code>build</code>即可在对应目录下生成<code>apk</code>。注意我这里给出的是<code>release</code>版本。</p>
<p><img src="/2025/03/08/qt-for-android-with-mac/image-20250308202343260.png" alt="image-20250308202343260"></p>
<p>效果</p>
<img src="d2a775cde896ebd2e2f1b9c57348f1b8_720.jpg" alt="d2a775cde896ebd2e2f1b9c57348f1b8_720" style="zoom:50%;" />
]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>QT</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>bash美化</title>
    <url>/2024/01/08/bash-beautiful/</url>
    <content><![CDATA[<h1 id="bash美化"><a href="#bash美化" class="headerlink" title="bash美化"></a>bash美化</h1><p>感觉zsh着实对性能羸弱的机子不太友好，参考网上大佬的方式，进行下bash的美化。</p>
<h2 id="配置ble-sh"><a href="#配置ble-sh" class="headerlink" title="配置ble.sh"></a>配置ble.sh</h2><p><a href="https://github.com/akinomyoga/ble.sh">github链接</a></p>
<p>这里搬运下官方安装教程：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --recursive --depth 1 --shallow-submodules https://github.com/akinomyoga/ble.sh.git</span><br><span class="line">make -C ble.sh install PREFIX=~/.local</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;source ~/.local/share/blesh/ble.sh&#x27;</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>之后使用source ~&#x2F;.bashrc查看效果：</p>
<p><img src="/2024/01/08/bash-beautiful/image-20250222133949356.png" alt="image-20250222133949356"></p>
<p>与zsh的autosuggestions逻辑一致，使用-&gt;键补全历史命令。</p>
<h2 id="配置bash外观"><a href="#配置bash外观" class="headerlink" title="配置bash外观"></a>配置bash外观</h2><p>参考大佬的文章，做了仿Fish的路径折叠，并且通过用户名颜色判断上一命令执行结果。</p>
<p>创建文件my_bash.sh:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">_fish_collapsed_pwd</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> <span class="built_in">pwd</span>=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    <span class="built_in">local</span> home=<span class="string">&quot;<span class="variable">$HOME</span>&quot;</span></span><br><span class="line">    <span class="built_in">local</span> size=<span class="variable">$&#123;#home&#125;</span></span><br><span class="line">    [[ <span class="variable">$#</span> == 0 ]] &amp;&amp; <span class="built_in">pwd</span>=<span class="string">&quot;<span class="variable">$PWD</span>&quot;</span></span><br><span class="line">    [[ -z <span class="string">&quot;<span class="variable">$pwd</span>&quot;</span> ]] &amp;&amp; <span class="built_in">return</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$pwd</span>&quot;</span> == <span class="string">&quot;/&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;/&quot;</span></span><br><span class="line">        <span class="built_in">return</span></span><br><span class="line">    <span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$pwd</span>&quot;</span> == <span class="string">&quot;<span class="variable">$home</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;~&quot;</span></span><br><span class="line">        <span class="built_in">return</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    [[ <span class="string">&quot;<span class="variable">$pwd</span>&quot;</span> == <span class="string">&quot;<span class="variable">$home</span>/&quot;</span>* ]] &amp;&amp; <span class="built_in">pwd</span>=<span class="string">&quot;~<span class="variable">$&#123;pwd:$size&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [[ -n <span class="string">&quot;<span class="variable">$BASH_VERSION</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">local</span> IFS=<span class="string">&quot;/&quot;</span></span><br><span class="line">        <span class="built_in">local</span> elements=(<span class="variable">$pwd</span>)</span><br><span class="line">        <span class="built_in">local</span> length=<span class="variable">$&#123;#elements[@]&#125;</span></span><br><span class="line">        <span class="keyword">for</span> ((i=<span class="number">0</span>;i&lt;length-<span class="number">1</span>;i++)); <span class="keyword">do</span></span><br><span class="line">            <span class="built_in">local</span> elem=<span class="variable">$&#123;elements[$i]&#125;</span></span><br><span class="line">            <span class="keyword">if</span> [[ <span class="variable">$&#123;#elem&#125;</span> -gt 1 ]]; <span class="keyword">then</span></span><br><span class="line">                elements[<span class="variable">$i</span>]=<span class="variable">$&#123;elem:0:1&#125;</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">local</span> elements=(<span class="string">&quot;<span class="variable">$&#123;(s:/:)pwd&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">local</span> length=<span class="variable">$&#123;#elements&#125;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..$((length-<span class="number">1</span>))&#125;; <span class="keyword">do</span></span><br><span class="line">            <span class="built_in">local</span> elem=<span class="variable">$&#123;elements[$i]&#125;</span></span><br><span class="line">            <span class="keyword">if</span> [[ <span class="variable">$&#123;#elem&#125;</span> &gt; 1 ]]; <span class="keyword">then</span></span><br><span class="line">                elements[<span class="variable">$i</span>]=<span class="variable">$&#123;elem[1]&#125;</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">local</span> IFS=<span class="string">&quot;/&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;elements[*]&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">PROMPT_COMMAND=__prompt_command    <span class="comment"># Function to generate PS1 after CMDs</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">__prompt_command</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> EXIT=<span class="string">&quot;$?&quot;</span>                <span class="comment"># This needs to be first</span></span><br><span class="line">    PS1=<span class="string">&quot;&quot;</span></span><br><span class="line"> </span><br><span class="line">    <span class="built_in">local</span> RCol=<span class="string">&#x27;\[\e[0m\]&#x27;</span></span><br><span class="line"> </span><br><span class="line">    <span class="built_in">local</span> Red=<span class="string">&#x27;\[\e[0;31m\]&#x27;</span></span><br><span class="line">    <span class="built_in">local</span> Gre=<span class="string">&#x27;\[\e[0;32m\]&#x27;</span></span><br><span class="line">    <span class="built_in">local</span> BYel=<span class="string">&#x27;\[\e[1;33m\]&#x27;</span></span><br><span class="line">    <span class="built_in">local</span> BBlu=<span class="string">&#x27;\[\e[1;34m\]&#x27;</span></span><br><span class="line">    <span class="built_in">local</span> Pur=<span class="string">&#x27;\[\e[0;35m\]&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$EXIT</span> != 0 ]; <span class="keyword">then</span></span><br><span class="line">        PS1+=<span class="string">&quot;<span class="variable">$&#123;Red&#125;</span>\u<span class="variable">$&#123;RCol&#125;</span>&quot;</span>        <span class="comment"># Add red if exit code non 0</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        PS1+=<span class="string">&quot;<span class="variable">$&#123;Gre&#125;</span>\u<span class="variable">$&#123;RCol&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line">    PS1+=<span class="string">&quot;<span class="variable">$&#123;RCol&#125;</span>@<span class="variable">$&#123;BBlu&#125;</span>\h <span class="variable">$&#123;Pur&#125;</span><span class="subst">$(_fish_collapsed_pwd)</span><span class="variable">$&#123;RCol&#125;</span> &quot;</span></span><br><span class="line">    <span class="built_in">export</span> PROMPT=<span class="string">&#x27;%F&#123;135&#125;%n%f@%F&#123;166&#125;%m%f %F&#123;2&#125;$(_fish_collapsed_pwd)%f&gt; &#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后在bashrc末尾source</p>
<p>效果：</p>
<p><img src="/2024/01/08/bash-beautiful/image-20250222134037919.png" alt="image-20250222134037919"></p>
<p>状态错误时：</p>
<p><img src="/2024/01/08/bash-beautiful/image-20250222134053613.png" alt="image-20250222134053613"></p>
<h2 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h2><p><a href="https://zhuanlan.zhihu.com/p/51008087">你不需要花哨的命令提示符 - 知乎 (zhihu.com)</a></p>
<p><a href="https://stackoverflow.com/questions/16715103/bash-prompt-with-the-last-exit-code">linux - Bash prompt with the last exit code - Stack Overflow</a></p>
]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>bash</tag>
        <tag>美化</tag>
      </tags>
  </entry>
</search>
